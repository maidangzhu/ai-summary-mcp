// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

// 技术文档模型
model Doc {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // 文档标题
  title     String
  // 文档内容（Markdown格式）
  content   String   @db.Text
  // 关联的分析结果
  analysisResults AnalysisResult[]

  @@map("docs")
}

// AI协作档案分析结果模型
model AnalysisResult {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // 基本信息
  title       String?
  chatContent String  @db.Text
  // 关联的技术文档ID
  docId       String?
  // 技术栈分析
  primaryStack String?
  // 业务分析
  business String?
  // 标签分析
  tags String[] @default([])
  // AI思考分析
  keyQuestions String[] @default([])
  // 总结
  summary String? @db.Text
  // 关联的问题分类
  problems ProblemClassification[]
  // 关联的技术文档
  doc Doc? @relation(fields: [docId], references: [id], onDelete: SetNull)

  @@map("analysis_results")
}

// 问题分类模型
model ProblemClassification {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  analysisResultId String
  category         String

  analysisResult AnalysisResult @relation(fields: [analysisResultId], references: [id], onDelete: Cascade)

  @@map("problem_classifications")
}
